/*
*******************************************************************************
* Copyright (C) 2010,2014, International Business Machines Corporation. 
* All Rights Reserved. *
*******************************************************************************
*/

namespace com.ibm.streamsx.inet.sample;

use com.ibm.streamsx.inet::InetSource;

/**
 * GetWeather 
 * Contacts NOAA for some weather information.  
 * Ouputs something like the following:
 * 
 * result: 2014/03/26 00:51 K14Y 260051Z AUTO 30003KT 10SM SCT041 M07/M15 A3013 RMK AO2
 * result: 2014/03/25 23:45 K14Y 252345Z AUTO 29007KT 10SM BKN041 M06/M15 A3014 RMK AO2
 * result: 2014/03/26 01:51 K14Y 260151Z AUTO 00000KT 10SM CLR M10/M15 A3012 RMK AO2
 */
public composite GetWeather
{
  graph
    stream<list<rstring> result> Result = InetSource()
    {
      //param URIList : ["http://www.weather.gov/alerts-beta/us.atom"];
      param URIList : ["http://weather.noaa.gov/pub/data/observations/metar/cycles/00Z.TXT",
                       "http://weather.noaa.gov/pub/data/observations/metar/cycles/01Z.TXT",
                       "http://weather.noaa.gov/pub/data/observations/metar/cycles/02Z.TXT"];
            incrementalFetch : true;
            inputLinesPerRecord : 3u;
            fetchInterval : 60.0;
            emitTuplePerURI : true;
    } 

    () as Writer = Custom(Result)
    {
      logic
        onTuple Result:
        {
          printString("result: " + result[0] + "\n");
        } 
    }
}
